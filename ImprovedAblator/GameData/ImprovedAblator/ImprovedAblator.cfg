@PART[*]:HAS[@MODULE[ModuleAblator]]:FINAL
{
	@MODULE[ModuleAblator]
	{
		// Override the stock ablator implementation wherever it is used
		@name = ModuleAblatorImproved

		// Heat offset by each unit of ablator. Increasing this lowers the heat
		// shield temp and lowers ablator burn rate, also the total heat the
		// ablator can ever offset when maxed. Small changes effective, linear.
		//
		// I don't decrease this because I want to be able to carry plenty of
		// ablator for interplanetary re-entries, and because it
		// increases required ablator mass excessively.
		//
		@pyrolysisLossFactor *= 1

		// Base rate of ablator burn. Increasing this increases ablator burn rate
		// and lowers temp (more units of ablator burned = more heat offset).
		// Small changes effective, linear.
		@lossConst *= 0.08

		// Temp offset for ablation. Below this temp no ablation happens. Also
		// seems to affect the heat scaling above the threshold, lowering
		// burn rate for a given lossExp. I want ablator to have a much higher
		// resilience to gentle re-entry, mainly so it doesn't all burn off before
		// the final re-entry when doing repeated passes for aerocapture.
		@ablationTempThresh = 2000

		// Nonlinear factor (possibly exponent) of ablator burn rate.
		// Increasing this makes ablator burn slower and increases temp, so it
		// acts in the opposite direction to lossConst.
		@lossExp *= 0.003
	}
}
